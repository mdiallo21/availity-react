(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{153:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(3),i=n(7),r=(n(0),n(184)),o=["components"],c={title:"<Date />"},p={unversionedId:"form/date/components/date",id:"form/date/components/date",isDocsHomePage:!1,title:"<Date />",description:"Date picker without a Label or Feedback",source:"@site/docs/form/date/components/date.md",slug:"/form/date/components/date",permalink:"/availity-react/form/date/components/date",editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/date/components/date.md",version:"current",sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/availity-react/form/date/index"},next:{title:"<DateField />",permalink:"/availity-react/form/date/components/date-field"}},l=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[]},{value:"Yup Validation",id:"yup-validation",children:[]}],d={toc:l};function b(e){var t=e.components,n=Object(i.a)(e,o);return Object(r.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Date picker without a ",Object(r.b)("inlineCode",{parentName:"p"},"Label")," or ",Object(r.b)("inlineCode",{parentName:"p"},"Feedback")),Object(r.b)("p",null,"If ",Object(r.b)("inlineCode",{parentName:"p"},"initialValues")," need to be specified for a Date or DateRange, they should be in the format ",Object(r.b)("inlineCode",{parentName:"p"},'"YYYY-MM-DD"')," or ",Object(r.b)("inlineCode",{parentName:"p"},'moment().format("YYYY-MM-DD")'),", even though dates are displayed to the user as ",Object(r.b)("inlineCode",{parentName:"p"},"MM/DD/YYYY")),Object(r.b)("h3",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Form } from '@availity/form';\nimport { avDate } from '@availity/yup';\nimport { Button } from 'reactstrap';\nimport Date from '@availity/date';\nimport '@availity/date/styles.scss';\nimport moment from 'moment';\nimport * as yup from 'yup';\n\nconst Example = () => (\n  <Form\n    initialValues={{\n      dateOfService: '',\n    }}\n    onSubmit={(values) => console.log(values)}\n    validationSchema={yup.object().shape({\n      dateOfService: avDate().required(),\n    })}\n  >\n    <Date\n      id=\"dateOfService\"\n      name=\"dateOfService\"\n      min={{ value: 7, units: 'day' }}\n      max={{ value: 7, units: 'day' }}\n    />\n    <Button color=\"primary\" type=\"submit\">\n      Submit\n    </Button>\n  </Form>\n);\n")),Object(r.b)("h4",{id:"live-example"},"Live example"),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://availity.github.io/availity-react/storybook/?path=/docs/form-components-date--date-input"},"Storybook")),Object(r.b)("h3",{id:"props"},"Props"),Object(r.b)("p",null,"See ",Object(r.b)("a",{parentName:"p",href:"https://github.com/airbnb/react-dates#singledatepicker"},"react-dates")," for additional props"),Object(r.b)("h4",{id:"name-string"},Object(r.b)("inlineCode",{parentName:"h4"},"name: string")),Object(r.b)("p",null,"The name of the field. Will be the key of the selected date that comes through in the values of the ",Object(r.b)("inlineCode",{parentName:"p"},"onSubmit")," callback."),Object(r.b)("h4",{id:"disabled-boolean"},Object(r.b)("inlineCode",{parentName:"h4"},"disabled?: boolean")),Object(r.b)("p",null,"Whether the date is disabled."),Object(r.b)("h4",{id:"min-string--limittype"},Object(r.b)("inlineCode",{parentName:"h4"},"min?: string | LimitType")),Object(r.b)("p",null,"Used in conjunction with ",Object(r.b)("inlineCode",{parentName:"p"},"max")," to derive ",Object(r.b)("inlineCode",{parentName:"p"},"isOutsideRange")," prop from ",Object(r.b)("inlineCode",{parentName:"p"},"react-dates")," and selectable year options in datepicker. Dates outside the allowed range will not be clickable in datepicker."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json",metastring:"hideCopy=true",hideCopy:"true"},'{\n  // LimitType\n  "value": "12",\n  "units": "day"\n}\n')),Object(r.b)("h4",{id:"max-string--limittype"},Object(r.b)("inlineCode",{parentName:"h4"},"max?: string | LimitType")),Object(r.b)("p",null,"Used in conjunction with ",Object(r.b)("inlineCode",{parentName:"p"},"min")," to derive ",Object(r.b)("inlineCode",{parentName:"p"},"isOutsideRange")," prop from ",Object(r.b)("inlineCode",{parentName:"p"},"react-dates")," and selectable year options in datepicker. Dates outside the allowed range will not be clickable in datepicker."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json",metastring:"hideCopy=true",hideCopy:"true"},'{\n  // LimitType\n  "value": "12",\n  "units": "day"\n}\n')),Object(r.b)("h4",{id:"onpickerfocuschange--focused-boolean---void"},Object(r.b)("inlineCode",{parentName:"h4"},"onPickerFocusChange?: ({ focused: boolean }) => void")),Object(r.b)("p",null,"Function to be run when focus on the input changes."),Object(r.b)("h4",{id:"format-string"},Object(r.b)("inlineCode",{parentName:"h4"},"format?: string")),Object(r.b)("p",null,"How to format date value in ",Object(r.b)("inlineCode",{parentName:"p"},"onSubmit")," callback. Must be a format recognized by ",Object(r.b)("a",{parentName:"p",href:"https://momentjs.com/docs/#/displaying/format/"},"moment"),". ",Object(r.b)("strong",{parentName:"p"},"Default: ",Object(r.b)("inlineCode",{parentName:"strong"},"MM/DD/YYYY"))),Object(r.b)("h4",{id:"datepicker-boolean"},Object(r.b)("inlineCode",{parentName:"h4"},"datepicker?: boolean")),Object(r.b)("p",null,"Toggle whether the calendar is shown."),Object(r.b)("h4",{id:"datepickerprops-singledatepickershape"},Object(r.b)("inlineCode",{parentName:"h4"},"datePickerProps?: SingleDatePickerShape")),Object(r.b)("p",null,"Props to be spread onto the datepicker component from ",Object(r.b)("a",{parentName:"p",href:"https://github.com/airbnb/react-dates#singledatepicker"},"react-dates"),"."),Object(r.b)("h4",{id:"opendirection-string"},Object(r.b)("inlineCode",{parentName:"h4"},"openDirection?: string")),Object(r.b)("p",null,"Set which direction the date picker renders. Possible values are ",Object(r.b)("inlineCode",{parentName:"p"},"up")," and ",Object(r.b)("inlineCode",{parentName:"p"},"down"),". Default: ",Object(r.b)("inlineCode",{parentName:"p"},"down")),Object(r.b)("h3",{id:"yup-validation"},"Yup Validation"),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"When the existence of ",Object(r.b)("inlineCode",{parentName:"p"},"Date")," component's field value is used with something like ",Object(r.b)("inlineCode",{parentName:"p"},"yup.when()")," to help validate another field in the schema, you cannot depend on the truthiness of that field value alone. A ",Object(r.b)("inlineCode",{parentName:"p"},"Date")," field that has had a value erased does not return to its ",Object(r.b)("inlineCode",{parentName:"p"},"initialValue"),", instead it is now a ",Object(r.b)("inlineCode",{parentName:"p"},"moment")," object that will pass a truthy check. Your conditional validation should take this into account."))))}b.isMDXComponent=!0},184:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),d=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=d(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),b=d(n),m=a,u=b["".concat(o,".").concat(m)]||b[m]||s[m]||r;return n?i.a.createElement(u,c(c({ref:t},l),{},{components:n})):i.a.createElement(u,c({ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<r;l++)o[l]=n[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);