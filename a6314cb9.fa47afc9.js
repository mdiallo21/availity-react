(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{146:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),i=(n(0),n(184)),o=["components"],l={title:"<Label />"},c={unversionedId:"form/components/label",id:"form/components/label",isDocsHomePage:!1,title:"<Label />",description:"Label that handles required indicator and field help icon. Uses Reactstrap Label.",source:"@site/docs/form/components/label.md",slug:"/form/components/label",permalink:"/availity-react/form/components/label",editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/components/label.md",version:"current",sidebar:"someSidebar",previous:{title:"<Input />",permalink:"/availity-react/form/components/input"},next:{title:"<RadioGroup />",permalink:"/availity-react/form/components/radio-group"}},p=[{value:"Additional Components",id:"additional-components",children:[]},{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[]}],b={toc:p};function s(e){var t=e.components,n=Object(a.a)(e,o);return Object(i.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Label that handles required indicator and field help icon. Uses Reactstrap Label."),Object(i.b)("h3",{id:"additional-components"},"Additional Components"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"<RequiredAsterisk />")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"<RequiredKey />"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},'Explains Asterisk Meaning - "Fields marked with an asterisk ',Object(i.b)("inlineCode",{parentName:"li"},"<RequiredAsterisk />"),' are required."'),Object(i.b)("li",{parentName:"ul"},"Should be at top of form when using ",Object(i.b)("inlineCode",{parentName:"li"},"<RequiredAsterisk />")," indicators.")))),Object(i.b)("h3",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'import React from \'react\';\nimport { Form, Input, Label } from \'@availity/form\';\nimport { Button } from \'reacstrap\';\nimport * as yup from \'yup\';\n\nconst Example = () => (\n  <Form\n    initialValues={{\n      hello: \'\',\n    }}\n    onSubmit={(values) => alert(JSON.stringify(values))}\n    validationSchema={yup.object({\n      hello: yup.string().required(),\n    })}\n    className="d-flex"\n  >\n    <RequiredKey />\n\n    <Label for="hello" helpId="hello-help-id" required>\n      Hello\n    </Label>\n    <Input name="hello" />\n    <Button type="submit" className="ml-1" color="primary">\n      Submit\n    </Button>\n  </Form>\n);\n')),Object(i.b)("h4",{id:"live-example-storybook"},"Live example: ",Object(i.b)("a",{parentName:"h4",href:"https://availity.github.io/availity-react/storybook/?path=/story/formik-form--label"},"Storybook")),Object(i.b)("h3",{id:"props"},"Props"),Object(i.b)("p",null,"Extends Reactstrap v8 Label Props (",Object(i.b)("inlineCode",{parentName:"p"},"for"),", ",Object(i.b)("inlineCode",{parentName:"p"},"tag"),", ",Object(i.b)("inlineCode",{parentName:"p"},"className"),", ",Object(i.b)("inlineCode",{parentName:"p"},"hidden"),", etc)"),Object(i.b)("h4",{id:"id-string"},Object(i.b)("inlineCode",{parentName:"h4"},"id?: string")),Object(i.b)("p",null,"Id of the label element. Default is generated UUID."),Object(i.b)("h4",{id:"helpid-string"},Object(i.b)("inlineCode",{parentName:"h4"},"helpId?: string")),Object(i.b)("p",null,"Help topic id, adds ",Object(i.b)("inlineCode",{parentName:"p"},"<FieldHelpIcon/>")," next to the label (should not be within label for accessibility)."),Object(i.b)("h4",{id:"required-boolean"},Object(i.b)("inlineCode",{parentName:"h4"},"required?: boolean")),Object(i.b)("p",null,"Will add ",Object(i.b)("inlineCode",{parentName:"p"},"<RequiredAsterisk />")," to label."))}s.isMDXComponent=!0},184:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=b(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=b(n),d=r,m=s["".concat(o,".").concat(d)]||s[d]||u[d]||i;return n?a.a.createElement(m,l(l({ref:t},p),{},{components:n})):a.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);