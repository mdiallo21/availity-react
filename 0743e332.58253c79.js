(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{184:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(n),m=r,d=b["".concat(i,".").concat(m)]||b[m]||u[m]||o;return n?a.a.createElement(d,l(l({ref:t},s),{},{components:n})):a.a.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),o=(n(0),n(184)),i=["components"],l={title:"Button"},c={unversionedId:"components/button",id:"components/button",isDocsHomePage:!1,title:"Button",description:"Version",source:"@site/docs/components/button.mdx",slug:"/components/button",permalink:"/availity-react/components/button",editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/button.mdx",version:"current",sidebar:"someSidebar",previous:{title:"Avatar",permalink:"/availity-react/components/avatar"},next:{title:"Breadcrumbs",permalink:"/availity-react/components/breadcrumbs"}},s=[{value:"Installation",id:"installation",children:[]},{value:"Loading Button Example",id:"loading-button-example",children:[]},{value:"Import Styles",id:"import-styles",children:[]},{value:"Props",id:"props",children:[]}],p={toc:s};function b(e){var t=e.components,n=Object(a.a)(e,i);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@availity/button"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@availity/button.svg?style=for-the-badge",alt:"Version"}))),Object(o.b)("h3",{id:"installation"},"Installation"),Object(o.b)("p",null,"npm"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"npm install @availity/button --save\n")),Object(o.b)("p",null,"Yarn"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @availity/button\n")),Object(o.b)("h3",{id:"loading-button-example"},"Loading Button Example"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Progress from '@availity/button';\n\nconst Example = () => (\n  <>\n    <LoadingButton block disabled isLoading={isLoading} color=\"primary\">\n      Test\n    </LoadingButton>\n  </>\n);\n")),Object(o.b)("h3",{id:"import-styles"},"Import Styles"),Object(o.b)("p",null,"Add this line in your scss file or app root to load the styles."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-scss"},"@import '~@availity/button/styles.scss';\n")),Object(o.b)("p",null,"OR"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import '@availity/button/styles.scss';\n")),Object(o.b)("h4",{id:"live-example"},"Live example"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://availity.github.io/availity-react/storybook/?path=/docs/components-button-loading-button--default"},"Storybook")),Object(o.b)("h3",{id:"props"},"Props"),Object(o.b)("h4",{id:"isloading-boolean"},Object(o.b)("inlineCode",{parentName:"h4"},"isLoading: boolean")),Object(o.b)("p",null,"This is the flag that determines whether the button is loading. If it is true, the loading panel will show."),Object(o.b)("h4",{id:"classname-string"},Object(o.b)("inlineCode",{parentName:"h4"},"className?: string")),Object(o.b)("p",null,"Additional classes that should be applied to the button."),Object(o.b)("h4",{id:"type-string"},Object(o.b)("inlineCode",{parentName:"h4"},"type?: string")),Object(o.b)("p",null,"This represents the button type, so either 'submit' or 'button'. Defaults to 'submit'."))}b.isMDXComponent=!0}}]);